{"version":3,"sources":["webpack:///./src/components/ArticleCard/index.js","webpack:///./src/templates/taggedBlogList/index.js","webpack:///./src/components/BlogListPage/index.js"],"names":["Card","data","frontmatter","className","to","slug","src","cover_photo","alt","title","excerpt","BlogList","render","posts","this","props","allMarkdownRemark","tag","pageContext","React","Component","blogListQuery","BlogListPage","componentDidMount","ReactGA","initialize","pageview","window","location","pathname","search","edges","prevPageLink","pageInfo","currentPage","map","node","key","id","hasPreviousPage","hasNextPage"],"mappings":"2FAAA,+CAsBeA,IAjBF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACLC,EAAeD,EAAfC,YACP,OACI,6BAASC,UAAU,eACf,kBAAC,IAAD,CAAMC,GAAE,IAAMF,EAAYG,MACtB,yBAAKF,UAAU,gBACX,yBAAKG,IAAKJ,EAAYK,YAAaC,IAAKN,EAAYO,SAExD,yBAAKN,UAAU,iBACX,yBAAKA,UAAU,SAASD,EAAYO,OACpC,uBAAGN,UAAU,WAAWF,EAAKS,c,oLCV5BC,E,gLACnBC,OAAA,WACE,IAAMC,EAAQC,KAAKC,MAAMd,KAAKe,kBAC9B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEP,MAAM,GACNR,KAAMY,EACNI,IAAKH,KAAKC,MAAMG,YAAYD,Q,GARAE,IAAMC,WAe/BC,EAAa,a,kLCZLC,E,wLACnBC,kBAAA,WACEC,IAAQC,WAAW,iBACnBD,IAAQE,SAASC,OAAOC,SAASC,SAAWF,OAAOC,SAASE,S,EAG9DlB,OAAA,WAAU,IAAD,EACaE,KAAKC,MAAlBd,EADA,EACAA,KAAMgB,EADN,EACMA,IACPJ,EAAQZ,EAAK8B,MACbC,EAA6C,IAA9B/B,EAAKgC,SAASC,YAAd,IAAsCjB,EAAtC,IAAkDA,EAAlD,KAAyDhB,EAAKgC,SAASC,YAAc,GAC1G,OACE,oCACE,kBAAC,IAAD,CACEzB,MAAOK,KAAKC,MAAMN,QAEpB,6BACGI,EAAMsB,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACZ,OACE,kBAAC,IAAD,CAAaC,IAAKD,EAAKE,GAAIrC,KAAMmC,QAItCnC,EAAKgC,SAASM,iBACb,kBAAC,IAAD,CAAMnC,GAAI4B,GAAV,QAED/B,EAAKgC,SAASO,aACb,kBAAC,IAAD,CAAMpC,GAAE,IAAMa,EAAN,KAAahB,EAAKgC,SAASC,YAAc,IAAjD,U,GA1BgCf,IAAMC","file":"component---src-templates-tagged-blog-list-index-js-11cfe7708f3fc4af6f48.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\n\nimport \"./styles.scss\";\n\nconst Card = ({ data }) => {\n    const {frontmatter} = data;\n    return (\n        <article className=\"ArticleCard\">\n            <Link to={`/${frontmatter.slug}`}>\n                <div className=\"imgContainer\">\n                    <img src={frontmatter.cover_photo} alt={frontmatter.title} />\n                </div>\n                <div className=\"TextContainer\">\n                    <div className=\"Title\">{frontmatter.title}</div>\n                    <p className=\"Excerpt\">{data.excerpt}</p>\n                </div>\n            </Link>\n        </article>\n    );\n};\n\nexport default Card;","import React from \"react\"\nimport { graphql } from \"gatsby\";\nimport BlogListPage from \"../../components/BlogListPage\";\nimport Layout from \"../../components/layout\";\n\nexport default class BlogList extends React.Component {\n  render() {\n    const posts = this.props.data.allMarkdownRemark;\n    return (\n      <Layout>\n        <BlogListPage\n          title=\"\"\n          data={posts}\n          tag={this.props.pageContext.tag}\n        />\n      </Layout>\n    );\n  }\n}\n\nexport const blogListQuery = graphql`\n  query taggedBlogListQuery($skip: Int!, $limit: Int!, $tag: String) {\n    allMarkdownRemark(\n      sort: {\n          order: DESC, fields: [frontmatter___date],\n      }\n      filter: {\n        frontmatter:{tags:{in: [$tag]}}\n      }\n      limit: $limit\n      skip: $skip\n    ) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        currentPage\n      }\n      edges {\n        node {\n          id\n          frontmatter {\n            slug\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            cover_photo\n          }\n        }\n      }\n    }\n  }\n`","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport ReactGA from 'react-ga';\n\n// Components\nimport SEO from \"../SEO\";\nimport ArticleCard from \"../../components/ArticleCard\";\n\nexport default class BlogListPage extends React.Component {\n  componentDidMount() {\n    ReactGA.initialize(\"UA-88285026-2\");\n    ReactGA.pageview(window.location.pathname + window.location.search);\n  }\n\n  render() {\n    const {data, tag} = this.props;\n    const posts = data.edges;\n    const prevPageLink = data.pageInfo.currentPage === 2 ? `/${tag}` : `/${tag}/${data.pageInfo.currentPage - 1}`;\n    return (\n      <>\n        <SEO\n          title={this.props.title}\n        />\n        <div>\n          {posts.map(({ node }) => {\n            return (\n              <ArticleCard key={node.id} data={node} />\n            );\n          })}\n        </div>\n        {data.pageInfo.hasPreviousPage &&\n          <Link to={prevPageLink}>Prev</Link>\n        }\n        {data.pageInfo.hasNextPage &&\n          <Link to={`/${tag}/${data.pageInfo.currentPage + 1}`}>Next</Link>\n        }\n      </>\n    );\n  }\n}"],"sourceRoot":""}