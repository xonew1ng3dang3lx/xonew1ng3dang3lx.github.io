{"version":3,"sources":["webpack:///./src/components/ArticleCard/index.js","webpack:///./src/templates/taggedBlogList/index.js","webpack:///./src/tags/sanitize.js","webpack:///./src/components/BlogListPage/index.js"],"names":["Card","data","frontmatter","className","to","slug","src","cover_photo","alt","title","date","excerpt","id","author","BlogList","render","posts","this","props","allMarkdownRemark","pageContext","tag","React","Component","blogListQuery","sanitizeTag","toLowerCase","split","join","trim","Template","start","useState","Date","useEffect","diff","getMilliseconds","ReactGA","event","category","variable","value","label","metadata","createBlogPageMetadata","edges","name","sanitizedTags","prevPageLink","pageInfo","currentPage","curPageLink","middle","parseInt","length","cards","slice","concat","node","isAd","keywords","urlPath","map","key","type","hasPreviousPage","hasNextPage"],"mappings":"4FAAA,uEA6BeA,IArBF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACLC,EAAeD,EAAfC,YACP,OACI,6BAASC,UAAU,eACf,kBAAC,OAAD,CAAMC,GAAE,IAAMF,EAAYG,MACtB,yBAAKF,UAAU,gBACX,kBAAC,IAAD,CAAOG,IAAKJ,EAAYK,YAAc,wBAAyBC,IAAKN,EAAYO,SAEpF,yBAAKN,UAAU,iBACX,yBAAKA,UAAU,SAASD,EAAYO,OACpC,yBAAKN,UAAU,QAAQD,EAAYQ,MACnC,uBAAGP,UAAU,WAAWF,EAAKU,SAC7B,yBAAKR,UAAU,yBACX,kBAAC,IAAD,CAAQS,GAAIV,EAAYW,e,oLChB3BC,E,gLACnBC,OAAA,WACE,IAAMC,EAAQC,KAAKC,MAAMjB,KAAKkB,kBAE9B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEV,MAAK,GAAKQ,KAAKC,MAAME,YAAYC,IACjCpB,KAAMe,EACNK,IAAG,SAAWJ,KAAKC,MAAME,YAAYC,Q,GATTC,IAAMC,WAgB/BC,EAAa,c,kFCrBbC,EAAc,SAACJ,GACxB,OAAOA,EAAIK,cAAcC,MAAM,KAAKC,KAAK,KAAKC,S,mPCanC,SAASC,EAAT,GAEX,IADF7B,EACC,EADDA,KAAMoB,EACL,EADKA,IAAKZ,EACV,EADUA,MAEJsB,EAASC,mBAAS,IAAIC,MAD5B,GAEDC,qBAAU,WACR,OAAO,WACL,IACMC,GADM,IAAIF,MACCG,kBAAoBL,EAAMK,kBAC3CC,IAAQC,MAAM,CACZC,SAAU,iBACVC,SAAU,OACVC,MAAON,EACPO,MAAOrB,QAKb,IAAMsB,EAAQ,iBACTC,YAAuB3C,EAAK4C,OADnB,CAEZC,KAAK,sCAAuCzB,IAExCL,EAAQf,EAAK4C,MACbE,EAAgBtB,YAAYJ,GAC5B2B,EAA6C,IAA9B/C,EAAKgD,SAASC,YAAd,IAAsCH,EAAtC,IAA4DA,EAA5D,KAA6E9C,EAAKgD,SAASC,YAAc,GACxHC,EAA4C,IAA9BlD,EAAKgD,SAASC,YAAd,GAAqCH,EAAqBA,EAA1D,IAA2E9C,EAAKgD,SAASC,YAEvGE,EAASC,SAASrC,EAAMsC,OAAS,GACjCC,EACJvC,EAAMwC,MAAM,EAAGJ,GACZK,OAAO,CAAEC,KAAM,CAAEC,MAAM,KACvBF,OAAOzC,EAAMwC,MAAMJ,IAExB,OACE,6BAASjD,UAAU,gBACjB,kBAAC,IAAD,CACEM,MAAK,0BAA4BA,EACjCmD,SAAU,CAACnD,GACXoD,QAAO,IAAMV,EACbR,SAAU,CAACA,KAEb,wBAAIxC,UAAU,SAASM,GACtB8C,EAAMO,KAAI,YAAe,IAAZJ,EAAW,EAAXA,KACZ,OAAIA,EAAKC,KACE,kBAAC,IAAD,CAAcI,IAAI,KAAKC,KAAM,cAGtC,kBAAC,IAAD,CAAaD,IAAKL,EAAK9C,GAAIX,KAAMyD,OAGrC,yBAAKvD,UAAU,uBACZF,EAAKgD,SAASgB,iBACb,kBAAC,OAAD,CAAM9D,UAAU,mBAAmBC,GAAI4C,GAAvC,QAED/C,EAAKgD,SAASiB,aACb,kBAAC,OAAD,CAAM/D,UAAU,wBAAwBC,GAAE,IAAM2C,EAAN,KAAuB9C,EAAKgD,SAASC,YAAc,IAA7F,SAGJ,kBAAC,IAAD,CAAcc,KAAM","file":"component---src-templates-tagged-blog-list-index-js-7c406861aa592bfc93f4.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\n\nimport Image from \"../Image\";\nimport Author from \"../Author\";\n\nimport \"./styles.scss\";\n\nconst Card = ({ data }) => {\n    const {frontmatter} = data;\n    return (\n        <article className=\"ArticleCard\">\n            <Link to={`/${frontmatter.slug}`}>\n                <div className=\"ImgContainer\">\n                    <Image src={frontmatter.cover_photo + \"&isNotExpandable=true\"} alt={frontmatter.title} />\n                </div>\n                <div className=\"TextContainer\">\n                    <div className=\"Title\">{frontmatter.title}</div>\n                    <div className=\"Date\">{frontmatter.date}</div>\n                    <p className=\"Excerpt\">{data.excerpt}</p>\n                    <div className=\"AuthorBubbleContainer\">\n                        <Author id={frontmatter.author} />\n                    </div>\n                </div>\n            </Link>\n        </article>\n    );\n};\n\nexport default Card;\n","import React from \"react\"\nimport { graphql } from \"gatsby\";\nimport BlogListPage from \"../../components/BlogListPage\";\nimport Layout from \"../../components/layout\";\n\nexport default class BlogList extends React.Component {\n  render() {\n    const posts = this.props.data.allMarkdownRemark;\n\n    return (\n      <Layout>\n        <BlogListPage\n          title={`${this.props.pageContext.tag}`}\n          data={posts}\n          tag={`blogs/${this.props.pageContext.tag}`}\n        />\n      </Layout>\n    );\n  }\n}\n\nexport const blogListQuery = graphql`\n  query taggedBlogListQuery($skip: Int!, $limit: Int!, $tag: String) {\n    allMarkdownRemark(\n      sort: {\n          order: DESC, fields: [frontmatter___date],\n      }\n      filter: {\n        frontmatter:{tags:{in: [$tag]}}\n      }\n      limit: $limit\n      skip: $skip\n    ) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        currentPage\n      }\n      edges {\n        node {\n          id\n          excerpt\n          frontmatter {\n            author\n            slug\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            modified_date(formatString: \"MMMM D, YYYY\")\n            cover_photo\n          }\n        }\n      }\n    }\n  }\n`","export const sanitizeTag = (tag) => {\n    return tag.toLowerCase().split(\" \").join(\"_\").trim();\n};","import React, {useEffect, useState} from \"react\";\nimport { Link } from \"gatsby\";\nimport ReactGA from 'react-ga';\nimport {sanitizeTag} from \"../../tags/sanitize\";\n\n// Components\nimport SEO from \"../SEO\";\nimport ArticleCard from \"../../components/ArticleCard\";\nimport AdsContainer from \"../../components/AdsContainer\";\n\nimport {createBlogPageMetadata} from \"../../jsonLd\";\n\nimport \"./styles.scss\";\n\nexport default function Template({\n  data, tag, title\n}) {\n  const [start] = useState(new Date());\n  useEffect(() => {\n    return () => {\n      const cur = new Date();\n      const diff = cur.getMilliseconds() - start.getMilliseconds();\n      ReactGA.event({\n        category: 'TimeOnBlogList',\n        variable: 'time',\n        value: diff, // in milliseconds\n        label: tag,\n      });\n    };\n  });\n\n  const metadata = {\n    ...createBlogPageMetadata(data.edges),\n    name: `TechWaifu's Blog Posts Related to #${tag}`,\n  };\n  const posts = data.edges;\n  const sanitizedTags = sanitizeTag(tag);\n  const prevPageLink = data.pageInfo.currentPage === 2 ? `/${sanitizedTags}` : `/${sanitizedTags}/${data.pageInfo.currentPage - 1}`;\n  const curPageLink = data.pageInfo.currentPage === 1 ? `${sanitizedTags}` : `${sanitizedTags}/${data.pageInfo.currentPage}`;\n\n  const middle = parseInt(posts.length / 2);\n  const cards = \n    posts.slice(0, middle)\n      .concat({ node: { isAd: true } })\n      .concat(posts.slice(middle));\n\n  return (\n    <section className=\"BlogListPage\">\n      <SEO\n        title={`Recent blog posts for #${title}`}\n        keywords={[title]}\n        urlPath={`/${curPageLink}`}\n        metadata={[metadata]}\n      />\n      <h1 className=\"Title\">{title}</h1>\n      {cards.map(({ node }) => {\n        if (node.isAd) {\n            return <AdsContainer key=\"Ad\" type={\"billboard\"} />;\n        }\n        return (\n          <ArticleCard key={node.id} data={node} />\n        );\n      })}\n      <div className=\"PaginationButtonCtr\">\n        {data.pageInfo.hasPreviousPage &&\n          <Link className=\"PaginationButton\" to={prevPageLink}>Prev</Link>\n        }\n        {data.pageInfo.hasNextPage &&\n          <Link className=\"PaginationButton Next\" to={`/${sanitizedTags}/${data.pageInfo.currentPage + 1}`}>Next</Link>\n        }\n      </div>\n      <AdsContainer type={\"leaderboard\"} />\n    </section>\n  );\n}\n"],"sourceRoot":""}