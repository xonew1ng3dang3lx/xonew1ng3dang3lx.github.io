{"version":3,"sources":["webpack:///./src/components/ArticleCard/index.js","webpack:///./src/templates/blogList/index.js","webpack:///./src/components/BlogListPage/index.js"],"names":["Card","data","frontmatter","className","to","slug","src","cover_photo","alt","title","date","excerpt","BlogList","render","posts","this","props","allMarkdownRemark","tag","React","Component","blogListQuery","Template","start","useState","Date","useEffect","diff","getMilliseconds","ReactGA","timing","category","variable","value","label","edges","prevPageLink","pageInfo","currentPage","curPageLink","keywords","urlPath","map","node","key","id","hasPreviousPage","hasNextPage"],"mappings":"2FAAA,2DAyBeA,IAlBF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACLC,EAAeD,EAAfC,YACP,OACI,6BAASC,UAAU,eACf,kBAAC,OAAD,CAAMC,GAAE,IAAMF,EAAYG,MACtB,yBAAKF,UAAU,gBACX,kBAAC,gBAAD,CAAeG,IAAKJ,EAAYK,YAAaC,IAAKN,EAAYO,SAElE,yBAAKN,UAAU,iBACX,yBAAKA,UAAU,SAASD,EAAYO,OACpC,yBAAKN,UAAU,QAAQD,EAAYQ,MACnC,uBAAGP,UAAU,WAAWF,EAAKU,c,oLCb5BC,E,gLACnBC,OAAA,WACE,IAAMC,EAAQC,KAAKC,MAAMf,KAAKgB,kBAC9B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACER,MAAM,eACNR,KAAMa,EACNI,IAAI,gB,GARwBC,IAAMC,WAe/BC,EAAa,a,gFCpB1B,qHAUe,SAASC,EAAT,GAEX,IADFrB,EACC,EADDA,KAAMiB,EACL,EADKA,IAAKT,EACV,EADUA,MAEJc,EAASC,mBAAS,IAAIC,MAD5B,GAEDC,qBAAU,WACR,OAAO,WACL,IACMC,GADM,IAAIF,MACCG,kBAAoBL,EAAMK,kBAC3CC,IAAQC,OAAO,CACbC,SAAU,iBACVC,SAAU,OACVC,MAAON,EACPO,MAAOhB,QAKb,IAAMJ,EAAQb,EAAKkC,MACbC,EAA6C,IAA9BnC,EAAKoC,SAASC,YAAd,IAAsCpB,EAAtC,IAAkDA,EAAlD,KAAyDjB,EAAKoC,SAASC,YAAc,GACpGC,EAA4C,IAA9BtC,EAAKoC,SAASC,YAAd,GAAqCpB,EAAWA,EAAhD,IAAuDjB,EAAKoC,SAASC,YACzF,OACE,6BAASnC,UAAU,gBACjB,kBAAC,IAAD,CACEM,MAAOA,EACP+B,SAAU,CAAC/B,GACXgC,QAASF,IAEX,wBAAIpC,UAAU,SAASM,GACtBK,EAAM4B,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACZ,OACE,kBAAC,IAAD,CAAaC,IAAKD,EAAKE,GAAI5C,KAAM0C,OAGrC,yBAAKxC,UAAU,uBACZF,EAAKoC,SAASS,iBACb,kBAAC,OAAD,CAAM3C,UAAU,mBAAmBC,GAAIgC,GAAvC,QAEDnC,EAAKoC,SAASU,aACb,kBAAC,OAAD,CAAM5C,UAAU,wBAAwBC,GAAE,IAAMc,EAAN,KAAajB,EAAKoC,SAASC,YAAc,IAAnF","file":"component---src-templates-blog-list-index-js-4097aab6e006fb2a3a12.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\n\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\nimport \"./styles.scss\";\n\nconst Card = ({ data }) => {\n    const {frontmatter} = data;\n    return (\n        <article className=\"ArticleCard\">\n            <Link to={`/${frontmatter.slug}`}>\n                <div className=\"imgContainer\">\n                    <LazyLoadImage src={frontmatter.cover_photo} alt={frontmatter.title} />\n                </div>\n                <div className=\"TextContainer\">\n                    <div className=\"Title\">{frontmatter.title}</div>\n                    <div className=\"Date\">{frontmatter.date}</div>\n                    <p className=\"Excerpt\">{data.excerpt}</p>\n                </div>\n            </Link>\n        </article>\n    );\n};\n\nexport default Card;\n","import React from \"react\"\nimport { graphql } from \"gatsby\";\nimport BlogListPage from \"../../components/BlogListPage\";\nimport Layout from \"../../components/layout\";\n\nexport default class BlogList extends React.Component {\n  render() {\n    const posts = this.props.data.allMarkdownRemark;\n    return (\n      <Layout>\n        <BlogListPage\n          title=\"Recent Posts\"\n          data={posts}\n          tag=\"blogs/all\"\n        />\n      </Layout>\n    );\n  }\n}\n\nexport const blogListQuery = graphql`\n  query blogListQuery($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: {\n          order: DESC, fields: [frontmatter___date],\n      }\n      limit: $limit\n      skip: $skip\n    ) {\n      pageInfo {\n        hasNextPage\n        currentPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          excerpt\n          frontmatter {\n            slug\n            title\n            date(formatString: \"MMMM D, YYYY\")\n            cover_photo\n          }\n        }\n      }\n    }\n  }\n`","import React, {useEffect, useState} from \"react\";\nimport { Link } from \"gatsby\";\nimport ReactGA from 'react-ga';\n\n// Components\nimport SEO from \"../SEO\";\nimport ArticleCard from \"../../components/ArticleCard\";\n\nimport \"./styles.scss\";\n\nexport default function Template({\n  data, tag, title\n}) {\n  const [start] = useState(new Date());\n  useEffect(() => {\n    return () => {\n      const cur = new Date();\n      const diff = cur.getMilliseconds() - start.getMilliseconds();\n      ReactGA.timing({\n        category: 'TimeOnBlogList',\n        variable: 'time',\n        value: diff, // in milliseconds\n        label: tag,\n      });\n    };\n  });\n\n  const posts = data.edges;\n  const prevPageLink = data.pageInfo.currentPage === 2 ? `/${tag}` : `/${tag}/${data.pageInfo.currentPage - 1}`;\n  const curPageLink = data.pageInfo.currentPage === 1 ? `${tag}` : `${tag}/${data.pageInfo.currentPage }`;\n  return (\n    <section className=\"BlogListPage\">\n      <SEO\n        title={title}\n        keywords={[title]}\n        urlPath={curPageLink}\n      />\n      <h1 className=\"Title\">{title}</h1>\n      {posts.map(({ node }) => {\n        return (\n          <ArticleCard key={node.id} data={node} />\n        );\n      })}\n      <div className=\"PaginationButtonCtr\">\n        {data.pageInfo.hasPreviousPage &&\n          <Link className=\"PaginationButton\" to={prevPageLink}>Prev</Link>\n        }\n        {data.pageInfo.hasNextPage &&\n          <Link className=\"PaginationButton Next\" to={`/${tag}/${data.pageInfo.currentPage + 1}`}>Next</Link>\n        }\n      </div>\n    </section>\n  );\n}\n"],"sourceRoot":""}