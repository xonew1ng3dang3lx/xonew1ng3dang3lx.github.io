{"version":3,"sources":["webpack:///./src/components/ArticleCard/index.js","webpack:///./src/templates/taggedBlogList/index.js","webpack:///./src/components/BlogListPage/index.js"],"names":["Card","data","frontmatter","className","to","slug","src","cover_photo","alt","title","date","excerpt","BlogList","render","posts","this","props","allMarkdownRemark","pageContext","tag","React","Component","blogListQuery","BlogListPage","componentDidMount","ReactGA","initialize","pageview","window","location","pathname","search","edges","prevPageLink","pageInfo","currentPage","curPageLink","keywords","urlPath","map","node","key","id","hasPreviousPage","hasNextPage"],"mappings":"2FAAA,2DAyBeA,IAlBF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACLC,EAAeD,EAAfC,YACP,OACI,6BAASC,UAAU,eACf,kBAAC,IAAD,CAAMC,GAAE,IAAMF,EAAYG,MACtB,yBAAKF,UAAU,gBACX,kBAAC,gBAAD,CAAeG,IAAKJ,EAAYK,YAAaC,IAAKN,EAAYO,SAElE,yBAAKN,UAAU,iBACX,yBAAKA,UAAU,SAASD,EAAYO,OACpC,yBAAKN,UAAU,QAAQD,EAAYQ,MACnC,uBAAGP,UAAU,WAAWF,EAAKU,c,oLCb5BC,E,gLACnBC,OAAA,WACE,IAAMC,EAAQC,KAAKC,MAAMf,KAAKgB,kBAC9B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACER,MAAK,GAAKM,KAAKC,MAAME,YAAYC,IACjClB,KAAMa,EACNK,IAAKJ,KAAKC,MAAME,YAAYC,Q,GARAC,IAAMC,WAe/BC,EAAa,c,mNCVLC,E,wLACnBC,kBAAA,WACEC,IAAQC,WAAW,iBACnBD,IAAQE,SAASC,OAAOC,SAASC,SAAWF,OAAOC,SAASE,S,EAG9DlB,OAAA,WAAU,IAAD,EACoBE,KAAKC,MAAzBf,EADA,EACAA,KAAMkB,EADN,EACMA,IAAKV,EADX,EACWA,MACZK,EAAQb,EAAK+B,MACbC,EAA6C,IAA9BhC,EAAKiC,SAASC,YAAd,IAAsChB,EAAtC,IAAkDA,EAAlD,KAAyDlB,EAAKiC,SAASC,YAAc,GACpGC,EAA4C,IAA9BnC,EAAKiC,SAASC,YAAd,GAAqChB,EAAWA,EAAhD,IAAuDlB,EAAKiC,SAASC,YACzF,OACE,6BAAShC,UAAU,gBACjB,kBAAC,IAAD,CACEM,MAAOM,KAAKC,MAAMP,MAClB4B,SAAU,CAAC5B,GACX6B,QAASF,IAEX,wBAAIjC,UAAU,SAASM,GACtBK,EAAMyB,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACZ,OACE,kBAAC,IAAD,CAAaC,IAAKD,EAAKE,GAAIzC,KAAMuC,OAGrC,yBAAKrC,UAAU,uBACZF,EAAKiC,SAASS,iBACb,kBAAC,IAAD,CAAMxC,UAAU,mBAAmBC,GAAI6B,GAAvC,QAEDhC,EAAKiC,SAASU,aACb,kBAAC,IAAD,CAAMzC,UAAU,wBAAwBC,GAAE,IAAMe,EAAN,KAAalB,EAAKiC,SAASC,YAAc,IAAnF,W,GA7B8Bf,IAAMC","file":"component---src-templates-tagged-blog-list-index-js-5019a7b41b901150eeca.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\n\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\nimport \"./styles.scss\";\n\nconst Card = ({ data }) => {\n    const {frontmatter} = data;\n    return (\n        <article className=\"ArticleCard\">\n            <Link to={`/${frontmatter.slug}`}>\n                <div className=\"imgContainer\">\n                    <LazyLoadImage src={frontmatter.cover_photo} alt={frontmatter.title} />\n                </div>\n                <div className=\"TextContainer\">\n                    <div className=\"Title\">{frontmatter.title}</div>\n                    <div className=\"Date\">{frontmatter.date}</div>\n                    <p className=\"Excerpt\">{data.excerpt}</p>\n                </div>\n            </Link>\n        </article>\n    );\n};\n\nexport default Card;\n","import React from \"react\"\nimport { graphql } from \"gatsby\";\nimport BlogListPage from \"../../components/BlogListPage\";\nimport Layout from \"../../components/layout\";\n\nexport default class BlogList extends React.Component {\n  render() {\n    const posts = this.props.data.allMarkdownRemark;\n    return (\n      <Layout>\n        <BlogListPage\n          title={`${this.props.pageContext.tag}`}\n          data={posts}\n          tag={this.props.pageContext.tag}\n        />\n      </Layout>\n    );\n  }\n}\n\nexport const blogListQuery = graphql`\n  query taggedBlogListQuery($skip: Int!, $limit: Int!, $tag: String) {\n    allMarkdownRemark(\n      sort: {\n          order: DESC, fields: [frontmatter___date],\n      }\n      filter: {\n        frontmatter:{tags:{in: [$tag]}}\n      }\n      limit: $limit\n      skip: $skip\n    ) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        currentPage\n      }\n      edges {\n        node {\n          id\n          excerpt\n          frontmatter {\n            slug\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            cover_photo\n          }\n        }\n      }\n    }\n  }\n`","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport ReactGA from 'react-ga';\n\n// Components\nimport SEO from \"../SEO\";\nimport ArticleCard from \"../../components/ArticleCard\";\n\nimport \"./styles.scss\";\n\nexport default class BlogListPage extends React.Component {\n  componentDidMount() {\n    ReactGA.initialize(\"UA-88285026-2\");\n    ReactGA.pageview(window.location.pathname + window.location.search);\n  }\n\n  render() {\n    const {data, tag, title} = this.props;\n    const posts = data.edges;\n    const prevPageLink = data.pageInfo.currentPage === 2 ? `/${tag}` : `/${tag}/${data.pageInfo.currentPage - 1}`;\n    const curPageLink = data.pageInfo.currentPage === 1 ? `${tag}` : `${tag}/${data.pageInfo.currentPage }`;\n    return (\n      <section className=\"BlogListPage\">\n        <SEO\n          title={this.props.title}\n          keywords={[title]}\n          urlPath={curPageLink}\n        />\n        <h1 className=\"Title\">{title}</h1>\n        {posts.map(({ node }) => {\n          return (\n            <ArticleCard key={node.id} data={node} />\n          );\n        })}\n        <div className=\"PaginationButtonCtr\">\n          {data.pageInfo.hasPreviousPage &&\n            <Link className=\"PaginationButton\" to={prevPageLink}>Prev</Link>\n          }\n          {data.pageInfo.hasNextPage &&\n            <Link className=\"PaginationButton Next\" to={`/${tag}/${data.pageInfo.currentPage + 1}`}>Next</Link>\n          }\n        </div>\n      </section>\n    );\n  }\n}"],"sourceRoot":""}